using PowerAPI.Data.Models;
using PowerAPI.Data.POCO;
using PowerAPI.Data.ViewModels;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace PowerAPI.Data.IRepository
{
    public interface ISetup : IAccount
    {
        Task<IEnumerable<PayrollHrpayrollCompanyStandard>> GetPayrollCompanyPolicy(ApiToken token);
        Task<IEnumerable<Data.Models.LedgerChartOfAccounts>> GetLedgerCOA(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollCompanyPolicy(PayrollHrpayrollCompanyStandard payrollPolicy, ApiToken token);
        Task<IEnumerable<PayrollHrpayrollReliefType>> PayrollReliefType(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollTaxType>> GetPayrollTaxType(ApiToken tokenObj);
        Task<IEnumerable<Companies>> GetCompanies(ApiToken tokenObj);
        Task<IEnumerable<Divisions>> GetDivisions(ApiToken token);
        Task<IEnumerable<Departments>> GetDepartments(ApiToken tokenObj);

        Task<Paging> GetBranch(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetCurrencies(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetTaxes(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetTaxGroupDetail(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetTaxGroups(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetDiscounts(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetDiscountGroups(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetDiscountGroupDetail(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetTerms(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetARTransactionTypes(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetLedgerAnalysis1(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetLedgerAnalysis2(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetCashbookPaymentTypes(PaginationParams Param, ApiToken tokenObj);
        Task<Paging> GetCreditCardTypes(PaginationParams Param, ApiToken tokenObj);

        

        Task<IEnumerable<PayrollJournalBasis>> GetPayrollJournalBasis(ApiToken token);
        Task<StatusMessage> AddPayrollPFAType(PayrollHrpayrollPfa payrollPFA, ApiToken token);
        Task<IEnumerable<PayrollHrpayrollPfa>> GetPayrollPFAType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollLoanType(PayrollHrpayrollLoanType payrollLoanType, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLoanType>> GetPayrollLoanType(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollAllowanceRelief>> GetPayrollAllowanceRelief(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollAllowanceRelief(PayrollHrpayrollAllowanceRelief payrollrelief, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollReliefType>> GetPayrollReliefType(ApiToken tokenObj);
        Task<IEnumerable<Data.ViewModels.PaymentTypes>> GetPayrollPayType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollPayType(Data.ViewModels.PaymentTypes payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> AddpayrollStandardRelief(PayrollHrpayrollStandardRelief payrollPolicy, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollStandardRelief>> GetPayrollStandardRelief(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLeaveType>> GetPayrollLeaveType(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollLeaveType(PayrollHrpayrollLeaveType payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> AddPayrollTaxTable(PayrollHrpayrollTaxTable payrollPolicy, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollTaxTable>> GetPayrollTaxTable(ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollTaxTable(int FiscalYear, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollStandardRelief(int FiscalYear, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollLoanType(string loanTypeId, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollLeaveType(string leaveTypeId, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollPayType(string payTypeId, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollPFAType(string pfaid, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollAllowanceRelief(int fiscalYear, ApiToken tokenObj);
        Task<IEnumerable<Data.Models.BankAccounts>> GetBankAccounts(ApiToken tokenObj);
        Task<StatusMessage> AddBankAccounts(Data.Models.BankAccounts payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeleteBankAccounts(string bankId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollGroupHeader>> GetPayrollGroupHeader(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollGroupHeader(PayrollHrpayrollGroupHeader payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollGroupHeader(string GroupId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollDesignation>> GetPayrollDesignationType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollDesignationType(PayrollHrpayrollDesignation payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollDesignation(string DesignationId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollCostCenter>> GetPayrollCostCenter(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollCostCenter(PayrollHrpayrollCostCenter payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollCostCenter(string CostCenterId, ApiToken tokenObj);
        Task<IEnumerable<Data.ViewModels.JobClass>> GetPayrollJobClassHeader(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollJobClassHeader(Data.ViewModels.JobClass payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollJobClassHeader(string jobClassId, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollJobClassDetail(PayrollHrpayrollJobClassDetail jobClassDetail, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollNationality>> GetPayrollNationalitySetup(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollNationality(PayrollHrpayrollNationality payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollNationality(string nationalityId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLga>> GetPayrollLGASetup(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollLGA(PayrollHrpayrollLga payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollLGA(string stateId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLocation>> GetPayrollLocation(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollLocation(PayrollHrpayrollLocation payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollLocation(string locationId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollState>> GetPayrollState(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollState(PayrollHrpayrollState payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollState(string stateId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollTitle>> GetPayrollTitle(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollTitle(PayrollHrpayrollTitle payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollTitle(string TitleId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollAttr>> GetPayrollAttribute(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollOperator>> GetPayrollOperator(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollPayTypeStatus>> GetPayrollStatus(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollCategory>> GetPayrollCategory(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollCategory(PayrollHrpayrollCategory payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollCategory(string categoryId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollGender>> GetPayrollGender(ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLoanInterestType>> GetPayrollInterestType(ApiToken tokenObj);
        Task<IEnumerable<PowerAPI.Data.ViewModels.EmployeeDept>> GetEmployeeDepartment(ApiToken tokenObj);
        Task<StatusMessage> AddEmployeeDepartment(Data.ViewModels.EmployeeDept payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollEmployeeDepartment(string employeeDepartmentId, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollEmployeeDepartmentDetails(string payTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollStatus>> GetPayrollMaritalStatus(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollMaritalStatus(PayrollHrpayrollStatus payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollHrPayrollStatus(string statusId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollLanguage>> GetPayrollLanguage(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollLanguage(PayrollHrpayrollLanguage payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollLanguage(string LanguageId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollOffenceType>> GetPayrollOffenceType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollOffenceType(PayrollHrpayrollOffenceType payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollOffenceType(string OffenceTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollRelationship>> GetPayrollRelationshipType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollRelationshipType(PayrollHrpayrollRelationship payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollRelationshipType(string RelationshipId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollActiveReason>> GetPayrollActiveReason(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollActiveReason(PayrollHrpayrollActiveReason payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollActiveReason(string ReasonId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollEmployeeActivity>> GetPayrollActivityType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollActivityType(PayrollHrpayrollEmployeeActivity payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollActivityType(string EmployeeActivityTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollCourseType>> GetPayrollCourseType(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollCourseType(PayrollHrpayrollCourseType payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollCourseType(string courseTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollQualificationClass>> GetPayrollQualificationClass(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollQualificationClass(PayrollHrpayrollQualificationClass payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollQualificationClass(string qualificationClassTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollQualificationType>> GetPayrollQualificationType(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollQualificationType(PayrollHrpayrollQualificationType payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollQualificationType(string qualificationTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollGradeType>> GetPayrollGradeType(ApiToken tokenObj);
        Task<StatusMessage> AddPayrollGradeType(PayrollHrpayrollGradeType payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollGradeType(string gradeTypeId, ApiToken tokenObj);
        Task<IEnumerable<PayrollHrpayrollInstitution>> GetPayrollInstitution(ApiToken tokenObj);
        Task<StatusMessage> AddpayrollInstitution(PayrollHrpayrollInstitution payrollPolicy, ApiToken tokenObj);
        Task<StatusMessage> DeletePayrollInstitution(string institutionId, ApiToken tokenObj);

    }
}